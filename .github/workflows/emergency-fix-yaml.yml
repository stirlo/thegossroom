name: Emergency YAML Fix
on:
  workflow_dispatch:

jobs:
  fix-yaml:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Create backup branch
        run: |
          git checkout -b backup-before-yaml-fix-$(date +%Y%m%d-%H%M%S)
          git push origin backup-before-yaml-fix-$(date +%Y%m%d-%H%M%S)
          git checkout main

      - name: Create emergency YAML fix script
        run: |
          cat > fix_yaml_emergency.py << 'EOF'
          #!/usr/bin/env python3
          """
          Emergency YAML Fix - Fix Jekyll front matter syntax
          """

          import re
          from pathlib import Path

          def fix_yaml_syntax(content):
              """Fix YAML syntax issues in front matter only"""
              if not content.startswith('---\n'):
                  return content

              parts = content.split('---\n', 2)
              if len(parts) < 3:
                  return content

              front_matter = parts[1]
              post_content = parts[2]  # Keep content unchanged

              original_fm = front_matter

              # Fix tags: remove quotes around individual items
              front_matter = re.sub(
                  r"tags: \[([^\]]+)\]",
                  lambda m: f"tags: [{', '.join([item.strip().strip('\"\'') for item in m.group(1).split(',')])}]",
                  front_matter
              )

              # Fix mentions: remove quotes from keys/values
              front_matter = re.sub(
                  r"mentions: \{([^}]+)\}",
                  lambda m: f"mentions: {{{m.group(1).replace('\"', '').replace(\"'\", '')}}}",
                  front_matter
              )

              # Fix corrupted title quotes
              front_matter = re.sub(r'title: "([^"]*)"([^"]*)"', r'title: "\1\2"', front_matter)
              front_matter = re.sub(r'title: "([^"]*)'([^"]*)"', r'title: "\1\'\2"', front_matter)

              if front_matter != original_fm:
                  return f"---\n{front_matter}---\n{post_content}"

              return content

          def main():
              posts_dir = Path('_posts')
              fixed_count = 0

              print("ðŸ”§ Fixing YAML syntax in Jekyll posts...")

              for post_file in posts_dir.glob('*.md'):
                  with open(post_file, 'r', encoding='utf-8') as f:
                      original_content = f.read()

                  fixed_content = fix_yaml_syntax(original_content)

                  if fixed_content != original_content:
                      with open(post_file, 'w', encoding='utf-8') as f:
                          f.write(fixed_content)
                      print(f"âœ… Fixed: {post_file.name}")
                      fixed_count += 1

              print(f"\nðŸŽ¯ Fixed YAML syntax in {fixed_count} posts!")

              # Create summary
              with open('yaml_fix_summary.txt', 'w') as f:
                  f.write(f"YAML Fix Summary\n")
                  f.write(f"================\n")
                  f.write(f"Files fixed: {fixed_count}\n")
                  f.write(f"Backup branch created with original files\n")
                  f.write(f"If issues occur, restore from backup branch\n")

          if __name__ == "__main__":
              main()
          EOF

      - name: Run YAML fix
        run: python fix_yaml_emergency.py

      - name: Show summary
        run: |
          echo "ðŸ“Š YAML Fix Results:"
          cat yaml_fix_summary.txt

      - name: Commit fixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ðŸš¨ Emergency fix: Restore proper YAML syntax in Jekyll posts"
          file_pattern: "_posts/*.md yaml_fix_summary.txt"
